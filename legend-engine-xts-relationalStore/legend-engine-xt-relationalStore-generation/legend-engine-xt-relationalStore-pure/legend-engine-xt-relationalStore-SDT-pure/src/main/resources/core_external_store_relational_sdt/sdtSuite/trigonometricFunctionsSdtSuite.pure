// Copyright 2024 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import meta::external::query::sql::metamodel::*;
import meta::external::store::relational::sdt::framework::*;

function <<SDT.test>> meta::external::store::relational::sdt::suite::trigonometricFunctions::pi(): SqlDialectTest[*]
{
  [
    testConfigForSimpleExpression('pi()', pi())
  ]
}

function <<SDT.test>> meta::external::store::relational::sdt::suite::trigonometricFunctions::radians(): SqlDialectTest[*]
{
  [
    testConfigForSimpleExpression('radians(180)', pi()),
    testConfigForSimpleExpression('radians(90)', pi()/2)
  ]
}

function <<SDT.test>> meta::external::store::relational::sdt::suite::trigonometricFunctions::degrees(): SqlDialectTest[*]
{
  [
    testConfigForSimpleExpression('degrees(pi())', 180.0),
    testConfigForSimpleExpression('degrees(pi() / 2)', 90.0)
  ]
}

function <<SDT.test>> meta::external::store::relational::sdt::suite::trigonometricFunctions::sine(): SqlDialectTest[*]
{
  [
    testConfigForSimpleExpression('sin(pi())', 0.0),
    testConfigForSimpleExpression('sin(pi()/2)', 1.0)
  ]
}

function <<SDT.test>> meta::external::store::relational::sdt::suite::trigonometricFunctions::arcsine(): SqlDialectTest[*]
{
  [
    testConfigForSimpleExpression('asin(0)', 0.0),
    testConfigForSimpleExpression('asin(1)', pi()/2)
  ]
}

function <<SDT.test>> meta::external::store::relational::sdt::suite::trigonometricFunctions::cosine(): SqlDialectTest[*]
{
  [
    testConfigForSimpleExpression('cos(pi())', -1.0),
    testConfigForSimpleExpression('cos(pi()/2)', 0.0)
  ]
}

function <<SDT.test>> meta::external::store::relational::sdt::suite::trigonometricFunctions::arccosine(): SqlDialectTest[*]
{
  [
    testConfigForSimpleExpression('acos(1)', 0.0),
    testConfigForSimpleExpression('acos(0)', pi()/2)
  ]
}

function <<SDT.test>> meta::external::store::relational::sdt::suite::trigonometricFunctions::tangent(): SqlDialectTest[*]
{
  [
    testConfigForSimpleExpression('tan(0)', 0.0),
    testConfigForSimpleExpression('tan(pi()/4)', 1.0)
  ]
}

function <<SDT.test>> meta::external::store::relational::sdt::suite::trigonometricFunctions::arctangent(): SqlDialectTest[*]
{
  [
    testConfigForSimpleExpression('atan(1)', pi()/4),
    testConfigForSimpleExpression('atan(0)', 0.0)
  ]
}

function <<SDT.test>> meta::external::store::relational::sdt::suite::trigonometricFunctions::cotangent(): SqlDialectTest[*]
{
  [
    testConfigForSimpleExpression('cot(pi()/4)', 1.0),
    testConfigForSimpleExpression('cot(pi()/2)', 0.0)
  ]
}

function <<SDT.test>> meta::external::store::relational::sdt::suite::trigonometricFunctions::arctangent2(): SqlDialectTest[*]
{
  [
    testConfigForSimpleExpression('atan2(0, 1)', 0.0),
    testConfigForSimpleExpression('atan2(1, 0)', 1.570796326794),
    testConfigForSimpleExpression('atan2(0.5, 3.5)', 0.141897054604)
  ]
}
